controller_url = "internal-codenator-899847730.us-west-2.elb.amazonaws.com" + ":8012"

l_mapping = {
    "Bash":"shell", 
    "Python":"python", 
    "Java":"javascript",
    "JavaScript":"javascript", 
    "R":"r"
}
models_list = {
    "Claude-v2": {
        "model_family": "bedrock",
        "model_name": "anthropic.claude-v2"
    },
    "Claude-v1": {
        "model_family": "bedrock",
        "model_name": "anthropic.claude-v1"
    },
    "Claude-instant-v1": {
        "model_family": "bedrock",
        "model_name": "anthropic.claude-instant-v1"
    },
    "Mistral7b-instruct": {
        "model_family": "sagemaker",
        "model_name": "tgi.jumpstart-dft-hf-llm-mistral-7b-instruct"
    },
    "Llama13b": {
        "model_family": "sagemaker",
        "model_name": "llama2js.jumpstart-dft-meta-textgeneration-llama-2-13b"
    }
}
task_store_prompt = "What would I say for you to generate the below code for me? Your answer must be a command sentence and complete to ensure identical code generation. Do not respond with code or mention package names. Avoid using please or showing emotions.\n```\n{code}\n```"
out_tag = ["<output>", "/output>"]
ex_out_tag = ["<expected_output>", "/expected_output>"]
max_security_scan_retries = 3

css = """
#red {background-color: #FA9F9D}
#amber {background-color: #FFD966}
/* Wrap */
#script-group .styler .block > .wrap{
 max-height:457px;
}
/* Script group */
#script-group{
 min-height:643px;
}

/* Unpadded box */
#script-group .block .unpadded_box{
 min-height:457px;
 height:457px;
}
/* Svelte 1ed2p3z */
#script-group .styler .svelte-1ed2p3z{
 max-height:28px;
}
.codemirror-wrapper .cm-editor .cm-scroller{
 min-height:457px;
}
"""
welcome_message="""
# Welcome to Codenator ü§ñÔ∏è
### Allow me to help you develop secure and robust code
"""
instructions="""
* Select programing language and LLM Model.<br>
* Interact with agent through chat to generate and modify code.<br>
* Each time agent will generate code, the code will be scanned for security vulnerabilities.<br>
* If the code fails security scan it will automatically sent back to agent to modify it. Failed code are not allowed to be executed.<br>
* Failed scan results will appear under **Other Outputs**.<br>
* You can approve and execute scanned code. The output of that execution will show in the **Output** section.<br>
* If the execution resulted in an error, the **Output** section will be colored in red and feed back will be sent to agent. The agent will automatically try to generate new corrected code.<br>
* An **Expected Output** generated by agent will also appear under **Other Outputs** section. If *Output* does not match **Expected Output**, the **Output** section will turn yellow.
* You can toggle streaming or change model paramaters from the **Parameters** section.
"""
output_err_msg = "Output: ‚ùåÔ∏è ERROR ‚ùåÔ∏è"
output_wrn_msg = "Output: ‚ö†Ô∏è WARNING ‚ö†Ô∏è value does not match `Expected Output`"
output_info_msg = "Output:"
scan_fail_msg = "üîçÔ∏è Code Security scan status: ‚õîÔ∏è"
scan_pass_msg = "üîçÔ∏è Code Security scan status: ‚úÖÔ∏è"
scan_empty_msg = "üîçÔ∏è Code Security scan status: None"
sec_out_err_msg = "Security Scan Output: ‚ùåÔ∏è ERROR ‚ùåÔ∏è"
sec_out_info_msg = "Security Scan Output:"