task_store_prompt = """ You are an expert programmer that helps me understand code.
You will be tasked to formulate a command sentence that describes the code.
You should only respond in JSON format as described below:
{
    "body": "Your response here",
    "reasoning": "Explain your reasoning here"
}
Ensure the response can be parsed by Python `json.loads`, e.g.: no trailing commas, no single quotes, etc.

What would I say for you to produce the below code for me? Your answer must be a command sentence and complete to ensure identical code generation. Do not respond with code or mention package names. Avoid using please or showing emotions.
```
{code}
```
"""
out_tag = ["<output>", "/output>"]
ex_out_tag = ["<expected_output>", "/expected_output>"]
max_security_scan_retries = 3

css = """
#red {background-color: #FA9F9D}
#amber {background-color: #FFD966}
/* Wrap */
#script-group .styler .block > .wrap{
 max-height:457px;
}
/* Script group */
#script-group{
 min-height:643px;
}

/* Unpadded box */
#script-group .block .unpadded_box{
 min-height:457px;
 height:457px;
}
/* Svelte 1ed2p3z */
#script-group .styler .svelte-1ed2p3z{
 max-height:28px;
}
.codemirror-wrapper .cm-editor .cm-scroller{
 min-height:457px;
}
/* Image */
.contain .gap img{
 height:362px;
}
/* Unpadded box */
gradio-app .gradio-container .main .wrap .contain .gap .stretch .gap .block .unpadded_box{
 height:362px !important;
}
/* Preview */
.contain .gap .preview{
 height:362px !important;
}

/* Grid wrap */
.contain .gap .grid-wrap{
 min-height:3px !important;
 height:362px !important;
}
"""
welcome_message="""
# Welcome to Codenator 🤖️
### Allow me to help you develop secure and robust code
"""
instructions="""
* Select programing language and LLM Model.<br>
* Interact with agent through chat to generate and modify code.<br>
* Each time agent will generate code, the code will be scanned for security vulnerabilities.<br>
* If the code fails security scan it will automatically sent back to agent to modify it. Failed code are not allowed to be executed.<br>
* Failed scan results will appear under **Other Outputs**.<br>
* You can approve and execute scanned code. The output of that execution will show in the **Output** section.<br>
* If the execution resulted in an error, the **Output** section will be colored in red and feed back will be sent to agent. The agent will automatically try to generate new corrected code.<br>
* An **Expected Output** generated by agent will also appear under **Other Outputs** section. If *Output* does not match **Expected Output**, the **Output** section will turn yellow.
* You can toggle streaming or change model paramaters from the **Parameters** section.
"""
output_err_msg = "Output: ❌️ ERROR ❌️"
output_wrn_msg = "Output: ⚠️ WARNING ⚠️ value does not match `Expected Output`"
output_info_msg = "Output:"
scan_fail_msg = "🔍️ Code Security scan status: ⛔️"
scan_pass_msg = "🔍️ Code Security scan status: ✅️"
scan_empty_msg = "🔍️ Code Security scan status: None"
sec_out_err_msg = "Security Scan Output: ❌️ ERROR ❌️"
sec_out_info_msg = "Security Scan Output:"
files_path = "tmp"